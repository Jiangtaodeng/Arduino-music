#define NOTE_D0 -1 
#define NOTE_D1 393 
#define NOTE_D2 441 
#define NOTE_D3 495 
#define NOTE_D4 556 
#define NOTE_D5 624 
#define NOTE_D6 661 
#define NOTE_D7 742 

#define NOTE_DL1 196 
#define NOTE_DL2 221 
#define NOTE_DL3 234 
#define NOTE_DL4 262 
#define NOTE_DL5 294 
#define NOTE_DL6 330 
#define NOTE_DL7 371 

#define NOTE_DH1 786 
#define NOTE_DH2 882 
#define NOTE_DH3 990 
#define NOTE_DH4 1049 
#define NOTE_DH5 1178
#define NOTE_DH6 1322
#define NOTE_DH7 1484 

int tune[] =  
{  
NOTE_D0,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D1,
NOTE_D1,NOTE_D0,NOTE_DL5,
NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D1,NOTE_D1,NOTE_DL7,NOTE_D1,NOTE_D2,
NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,
NOTE_D0,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_D6,NOTE_D5,NOTE_D6,
NOTE_D6,NOTE_DH1,NOTE_DH1,NOTE_DH1,NOTE_D0,NOTE_DL6,NOTE_D1,
NOTE_D3,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D0,NOTE_DL5,NOTE_DL5,NOTE_DL6,NOTE_D1,NOTE_DL6,NOTE_D1,
NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D3,NOTE_D5,NOTE_D5,
NOTE_DH1,NOTE_DH1,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D0,NOTE_D3,NOTE_D5,
NOTE_DH1,NOTE_DH1,NOTE_DH1,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D0,NOTE_D3,NOTE_D2,
NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DH1,NOTE_D7,NOTE_D6,NOTE_D6,NOTE_D5,NOTE_D3,NOTE_D3,
NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D0,NOTE_D3,
NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D3,
NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,
NOTE_D0,NOTE_D6,NOTE_D5,NOTE_D6,NOTE_DH1,NOTE_D0,NOTE_D5,NOTE_D6,NOTE_D6,NOTE_DH1,NOTE_D3,
NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,
NOTE_D0,
NOTE_D0,NOTE_D6,NOTE_D5,NOTE_D6,NOTE_D1,NOTE_D0,NOTE_D5,NOTE_D6,NOTE_D6,NOTE_D1,NOTE_D3,
NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,NOTE_D0,NOTE_D5,
NOTE_DH1,NOTE_DH7,NOTE_DH1,NOTE_DH3,NOTE_D7,NOTE_D6,NOTE_DH2,NOTE_D7,NOTE_D5,
NOTE_D4,NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D4,NOTE_D3,NOTE_D4,NOTE_D5,NOTE_D5,NOTE_DH1,NOTE_DH2,
NOTE_DH2,NOTE_DH3,NOTE_DH2,NOTE_DH3,NOTE_DH3,NOTE_DH4,NOTE_DH3,NOTE_DH2,NOTE_DH1,NOTE_DH2,NOTE_DH3,NOTE_DH3,NOTE_DH1,
NOTE_DH1,NOTE_DH1,NOTE_DH1,NOTE_D5,NOTE_D0,NOTE_D4,NOTE_D3,NOTE_D4,NOTE_D4,NOTE_D5,NOTE_D5,
NOTE_D1,NOTE_D3,NOTE_D4,NOTE_D4,NOTE_D6,NOTE_D5,NOTE_D5,NOTE_D3,NOTE_D5,NOTE_D5,
NOTE_DH1,NOTE_DH1,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D0,NOTE_D3,NOTE_D5,
NOTE_DH1,NOTE_DH1,NOTE_DH1,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D0,NOTE_D3,NOTE_D2,
NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DH1,NOTE_D7,NOTE_D6,NOTE_D5,NOTE_D5,NOTE_D3,NOTE_D3,
NOTE_D2,NOTE_D0,NOTE_D3,
NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D3,
NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,
NOTE_D0,NOTE_D6,NOTE_D5,NOTE_D6,NOTE_DH1,NOTE_D0,NOTE_D5,NOTE_D6,NOTE_D6,NOTE_DH1,NOTE_D3,
NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D3,NOTE_D5,NOTE_D5,
NOTE_D0,NOTE_D6,NOTE_D5,NOTE_D6,NOTE_DH1,NOTE_D0,NOTE_D5,NOTE_D6,NOTE_D6,NOTE_DH1,NOTE_D3,
NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,NOTE_D3,NOTE_D5,NOTE_D5,
NOTE_D0,NOTE_D6,NOTE_D5,NOTE_D6,NOTE_DH1,NOTE_D0,NOTE_D5,NOTE_D6,NOTE_D6,NOTE_DH1,NOTE_D3,
NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,
NOTE_D0,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D3,NOTE_D5,NOTE_D1,
NOTE_D1,NOTE_D0,NOTE_D5,
NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D1,NOTE_DL7,NOTE_DL7,NOTE_D1,NOTE_D2,
NOTE_D2,
NOTE_D0,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_D6,NOTE_D6,NOTE_D5,NOTE_D6,
NOTE_D6,NOTE_D5,NOTE_D3,NOTE_D3,NOTE_D0,NOTE_D6,NOTE_D1,
NOTE_D3,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D0,NOTE_DL5,NOTE_DL5,NOTE_DL6,NOTE_D1,NOTE_DL6,NOTE_D1,
NOTE_D1,NOTE_D0,NOTE_DL6,NOTE_D1,
NOTE_D3,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D2,NOTE_D0,NOTE_DL5,NOTE_DL5,NOTE_DL6,NOTE_D1,NOTE_D2,NOTE_D1,
//NOTE_D0,
}
;//这部分就是整首曲子的音符部分

float duration[]= 

{  
0.5,0.25,0.25,0.25,0.5,0.25+1,0.25,0.5,0.25,
1+1+1,0.5+0.25,0.25,
0.25,0.5,0.25,0.25,0.25,0.25,0.25,0.5+0.25,0.25,0.25,0.25,0.25,0.25,
1,1,1,1,
0.5,0.25,0.25,0.25,0.5,0.25,0.5+0.25,0.25,0.25,0.5,0.25,
0.25,0.5+0.25,1,1,0.5,0.25,0.25,
0.25,0.25,0.25,0.25,1,0.5,0.25,0.25,0.25,0.25,0.25,0.25,
1,1,1,0.25,0.5,0.25,
1,0.25,0.5,0.25,1,0.25,0.5,0.25,
0.5,0.25,0.25,0.5,0.25,1,0.5,0.25,0.25,
0.25,0.5,0.25,0.5+0.25,0.25,0.25,0.5,0.25,0.25,0.5,0.25,
1,1,1,0.5+0.25,0.25,
0.25,0.25,0.25,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.5+0.25,0.25,
0.25,0.25,0.25,0.25,0.25,0.5,0.25,0.25,0.5,0.25,1,
0.5,0.25,0.25,0.25,0.5+0.25,0.5,0.25,0.25,0.25,0.5,0.25,
0.25,0.25,0.5,1+1+1,
1+1+1+1,
0.5,0.25,0.25,0.25,0.5+0.25,0.5,0.25,0.25,0.25,0.5,0.25,
0.25,0.5,0.25,1+1,0.25,0.5+0.25,
0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,
0.25,0.25,0.25,0.25,0.5,0.5,0.25,0.25,0.25,0.25,0.5,0.25,0.25,
0.25,0.25,0.25,0.25,0.25,0.5,0.25,0.5,0.25,0.25,0.25,0.5,0.25,
0.5+0.25,0.25,0.25,0.5+0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,
0.5,0.25,0.25,0.25,0.5,0.25,1,0.25,0.5,0.25,
1,0.25,0.5,0.25,1,0.25,0.5,0.25,
0.5+0.25,0.25,0.25,0.5,0.25,1,0.5,0.25,0.25,
0.25,0.5,0.25,0.5+0.25,0.25,0.5,0.25,0.25,0.25,0.5,0.25,
1+1+1,0.5+0.25,0.25,
0.25,0.25,0.25,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.5+0.25,0.25,
0.25,0.25,0.25,0.25,0.25,0.5,0.25,0.25,0.5,0.25,1,
0.5,0.25,0.25,0.25,0.5+0.25,0.5,0.25,0.25,0.25,0.5,0.25,
0.25,0.5,0.25,1+1,0.25,0.5,0.25,
0.5,0.25,0.25,0.25,0.5+0.25,0.5,0.25,0.25,0.25,0.5,0.25,
0.25,0.5,0.25,1+1+1,
1,0.25,0.25,0.25,0.5,0.25,0.25,0.25,0.5,0.25,
1+1+1,0.5+0.25,0.25,
0.25,0.5,0.25,0.25,0.25,0.25,0.25,0.5+0.25,0.25,0.25,0.25,0.25,0.25,
1+1+1+1,
0.5,0.25,0.25,0.25,0.5,0.25,0.5+0.25,0.25,0.25,0.25,0.25,0.25,
0.25,0.25,0.5,1+1,0.5,0.25,0.25,
0.25,0.25,0.25,0.25,1,0.5,0.25,0.25,0.25,0.25,0.25,0.25,
1+1+1,0.5,0.25,0.25,
0.25,0.25,0.25,0.25,1,0.5,0.25,0.25,0.25,0.25,0.25,0.25,
//1+1+1+1,
};//这部分是整首曲子的节拍部分(数组的个数和前面音符的个数一样并一一对应）

int length;//音符长度
int tonePin=5;//蜂鸣器的pin 


void setup() 

{  
  pinMode(tonePin,OUTPUT);//设置蜂鸣器的pin为输出模式

  length = sizeof(tune)/sizeof(tune[0]);//这里用了一个sizeof函数， 可以查出tone序列里有多少个音符

} 

void loop() 

{  

  for(int x=0;x<length;x++)//循环音符的次数
  {  
    tone(tonePin,tune[x]);

 delay(1000*duration[x]);//每个音符持续的时间

noTone(tonePin);//停止当前音符，进入下一音符

  } 
  delay(5000);//等待5秒后，循环重新开始
}
